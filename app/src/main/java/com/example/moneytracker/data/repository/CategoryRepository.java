package com.example.moneytracker.data.repository;import androidx.lifecycle.LiveData;import com.example.moneytracker.data.db.Category;import com.example.moneytracker.data.db.CategoryDao;import com.example.moneytracker.interfaces.ICategoryRepository;import java.util.List;import java.util.concurrent.ExecutorService;import java.util.concurrent.Executors;import javax.inject.Inject;import javax.inject.Singleton;@Singletonpublic class CategoryRepository implements ICategoryRepository {    private final CategoryDao categoryDao;    private final ExecutorService executorService;    @Inject    public CategoryRepository(CategoryDao categoryDao) {        this.categoryDao = categoryDao;        this.executorService = Executors.newSingleThreadExecutor();    }    public LiveData<List<Category>> getAllCategories() {        return categoryDao.getAllCategories();    }    public void insert(Category category) {        executorService.execute(() -> {            categoryDao.insert(category);        });    }    public void update(Category category) {        executorService.execute(() -> {            categoryDao.update(category);        });    }    public void delete(Category category) {        executorService.execute(() -> {            categoryDao.delete(category);        });    }    public LiveData<Category> getCategoryById(int categoryId) {        return categoryDao.getCategoryById(categoryId);    }}