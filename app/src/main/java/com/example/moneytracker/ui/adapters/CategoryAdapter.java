package com.example.moneytracker.ui.adapters;import android.content.Context;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.ImageButton;import android.widget.ImageView;import android.widget.TextView;import androidx.annotation.NonNull;import androidx.recyclerview.widget.DiffUtil;import androidx.recyclerview.widget.ListAdapter;import androidx.recyclerview.widget.RecyclerView;import com.example.moneytracker.R;import com.example.moneytracker.data.db.Category;public class CategoryAdapter extends ListAdapter<Category, CategoryAdapter.CategoryViewHolder> {    private final OnItemClickListener itemClickListener;    private final OnDeleteClickListener deleteClickListener;    public interface OnItemClickListener {        void onItemClick(@NonNull Category category);    }    public interface OnDeleteClickListener {        void onDeleteClick(@NonNull Category category);    }    public CategoryAdapter(OnItemClickListener itemClickListener, OnDeleteClickListener deleteClickListener) {        super(DIFF_CALLBACK);        this.itemClickListener = itemClickListener;        this.deleteClickListener = deleteClickListener;    }    @NonNull    @Override    public CategoryViewHolder onCreateViewHolder(@NonNull ViewGroup parent, int viewType) {        View view = LayoutInflater.from(parent.getContext())                .inflate(R.layout.item_category, parent, false);        return new CategoryViewHolder(view);    }    @Override    public void onBindViewHolder(@NonNull CategoryViewHolder holder, int position) {        Category category = getItem(position);        holder.bind(category, itemClickListener, deleteClickListener);    }    static class CategoryViewHolder extends RecyclerView.ViewHolder {        private final ImageView ivIcon;        private final TextView tvName;        private final ImageButton btnDelete;        public CategoryViewHolder(@NonNull View itemView) {            super(itemView);            ivIcon = itemView.findViewById(R.id.image_view_category_icon);            tvName = itemView.findViewById(R.id.text_view_category_name);            btnDelete = itemView.findViewById(R.id.button_delete_category);        }        public void bind(Category category, OnItemClickListener itemListener, OnDeleteClickListener deleteListener) {            tvName.setText(category.name);            Context context = itemView.getContext();            int iconResId = context.getResources().getIdentifier(                    category.iconName, "drawable", context.getPackageName()            );            if (iconResId == 0) {                iconResId = R.drawable.ic_cat_transport;            }            ivIcon.setImageResource(iconResId);            itemView.setOnClickListener(v -> itemListener.onItemClick(category));            btnDelete.setOnClickListener(v -> deleteListener.onDeleteClick(category));        }    }    private static final DiffUtil.ItemCallback<Category> DIFF_CALLBACK =            new DiffUtil.ItemCallback<Category>() {                @Override                public boolean areItemsTheSame(@NonNull Category oldItem, @NonNull Category newItem) {                    return oldItem.id == newItem.id;                }                @Override                public boolean areContentsTheSame(@NonNull Category oldItem, @NonNull Category newItem) {                    return oldItem.name.equals(newItem.name) &&                            oldItem.iconName.equals(newItem.iconName);                }            };}