package com.example.moneytracker.ui.fragments;import android.os.Bundle;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.fragment.app.Fragment;import androidx.lifecycle.ViewModelProvider;import androidx.navigation.fragment.NavHostFragment;import androidx.recyclerview.widget.RecyclerView;import com.example.moneytracker.R;import com.example.moneytracker.ui.adapters.AccountAdapter;import com.example.moneytracker.viewmodel.AccountsViewModel;import com.google.android.material.appbar.MaterialToolbar;import dagger.hilt.android.AndroidEntryPoint;@AndroidEntryPointpublic class AccountsFragment extends Fragment {    private AccountsViewModel viewModel;    private AccountAdapter adapter;    private RecyclerView recyclerView;    private MaterialToolbar toolbar;    @Nullable    @Override    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {        return inflater.inflate(R.layout.fragment_accounts, container, false);    }    @Override    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {        super.onViewCreated(view, savedInstanceState);        viewModel = new ViewModelProvider(this).get(AccountsViewModel.class);        findViews(view);        setupToolbar();        setupRecyclerView();        setupObservers();    }    private void findViews(View view) {        recyclerView = view.findViewById(R.id.recycler_accounts);        toolbar = view.findViewById(R.id.toolbar_accounts);    }    private void setupToolbar() {        toolbar.setNavigationOnClickListener(v -> NavHostFragment.findNavController(this).navigateUp());    }    private void setupRecyclerView() {        adapter = new AccountAdapter();        recyclerView.setAdapter(adapter);    }    private void setupObservers() {        viewModel.allAccountsWithBalance.observe(getViewLifecycleOwner(), accounts -> {            if (accounts != null) {                adapter.submitList(accounts);            }        });    }}