package com.example.moneytracker.ui.fragments;import android.os.Bundle;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.TextView;import androidx.annotation.NonNull;import androidx.annotation.Nullable;import androidx.fragment.app.Fragment;import androidx.lifecycle.ViewModelProvider;import androidx.navigation.fragment.NavHostFragment;import androidx.recyclerview.widget.RecyclerView;import com.example.moneytracker.R;import com.example.moneytracker.ui.adapters.CategoryAdapter;import com.example.moneytracker.viewmodel.CategoriesViewModel;import com.google.android.material.appbar.MaterialToolbar;import com.google.android.material.floatingactionbutton.FloatingActionButton;import dagger.hilt.android.AndroidEntryPoint;@AndroidEntryPointpublic class CategoriesFragment extends Fragment {    private CategoriesViewModel viewModel;    private CategoryAdapter adapter;    private RecyclerView recyclerView;    private TextView emptyView;    private MaterialToolbar toolbar;    private FloatingActionButton fab;    @Nullable    @Override    public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {        return inflater.inflate(R.layout.fragment_categories, container, false);    }    @Override    public void onViewCreated(@NonNull View view, @Nullable Bundle savedInstanceState) {        super.onViewCreated(view, savedInstanceState);        viewModel = new ViewModelProvider(this).get(CategoriesViewModel.class);        findViews(view);        setupToolbar();        setupRecyclerView();        setupObservers();        setupClickListeners();    }    private void findViews(@NonNull View view) {        recyclerView = view.findViewById(R.id.recycler_categories);        emptyView = view.findViewById(R.id.empty_view_categories);        toolbar = view.findViewById(R.id.toolbar_categories);        fab = view.findViewById(R.id.fab_add_category);    }    private void setupToolbar() {        toolbar.setNavigationOnClickListener(v -> NavHostFragment.findNavController(this).navigateUp());    }    private void setupRecyclerView() {        adapter = new CategoryAdapter(                category -> {                    Bundle bundle = new Bundle();                    bundle.putInt("categoryId", category.id);                    NavHostFragment.findNavController(this)                            .navigate(R.id.action_categoriesFragment_to_addEditCategoryFragment, bundle);                },                category -> {                    viewModel.delete(category);                }        );        recyclerView.setAdapter(adapter);    }    private void setupObservers() {        viewModel.allCategories.observe(getViewLifecycleOwner(), categories -> {            boolean isEmpty = categories == null || categories.isEmpty();            emptyView.setVisibility(isEmpty ? View.VISIBLE : View.GONE);            recyclerView.setVisibility(isEmpty ? View.GONE : View.VISIBLE);            adapter.submitList(categories);        });    }    private void setupClickListeners() {        fab.setOnClickListener(v -> {            NavHostFragment.findNavController(this)                    .navigate(R.id.action_categoriesFragment_to_addEditCategoryFragment);        });    }}